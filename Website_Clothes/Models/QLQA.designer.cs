#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Website_Clothes.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_QUANAOO")]
	public partial class QLQADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBRAND(BRAND instance);
    partial void UpdateBRAND(BRAND instance);
    partial void DeleteBRAND(BRAND instance);
    partial void InsertVOUCHER(VOUCHER instance);
    partial void UpdateVOUCHER(VOUCHER instance);
    partial void DeleteVOUCHER(VOUCHER instance);
    partial void InsertBUYER(BUYER instance);
    partial void UpdateBUYER(BUYER instance);
    partial void DeleteBUYER(BUYER instance);
    partial void InsertCART(CART instance);
    partial void UpdateCART(CART instance);
    partial void DeleteCART(CART instance);
    partial void InsertCATEGORY(CATEGORY instance);
    partial void UpdateCATEGORY(CATEGORY instance);
    partial void DeleteCATEGORY(CATEGORY instance);
    partial void InsertCHARIRY_PRODUCT(CHARIRY_PRODUCT instance);
    partial void UpdateCHARIRY_PRODUCT(CHARIRY_PRODUCT instance);
    partial void DeleteCHARIRY_PRODUCT(CHARIRY_PRODUCT instance);
    partial void InsertCHARITY_ORGANIZATION(CHARITY_ORGANIZATION instance);
    partial void UpdateCHARITY_ORGANIZATION(CHARITY_ORGANIZATION instance);
    partial void DeleteCHARITY_ORGANIZATION(CHARITY_ORGANIZATION instance);
    partial void InsertDELIVERY(DELIVERY instance);
    partial void UpdateDELIVERY(DELIVERY instance);
    partial void DeleteDELIVERY(DELIVERY instance);
    partial void InsertDONATE(DONATE instance);
    partial void UpdateDONATE(DONATE instance);
    partial void DeleteDONATE(DONATE instance);
    partial void InsertDONOR(DONOR instance);
    partial void UpdateDONOR(DONOR instance);
    partial void DeleteDONOR(DONOR instance);
    partial void InsertLOGIN(LOGIN instance);
    partial void UpdateLOGIN(LOGIN instance);
    partial void DeleteLOGIN(LOGIN instance);
    partial void InsertMANAGE(MANAGE instance);
    partial void UpdateMANAGE(MANAGE instance);
    partial void DeleteMANAGE(MANAGE instance);
    partial void InsertMESSAGE(MESSAGE instance);
    partial void UpdateMESSAGE(MESSAGE instance);
    partial void DeleteMESSAGE(MESSAGE instance);
    partial void InsertORDER_DETAIL(ORDER_DETAIL instance);
    partial void UpdateORDER_DETAIL(ORDER_DETAIL instance);
    partial void DeleteORDER_DETAIL(ORDER_DETAIL instance);
    partial void InsertPAYMENT_METHOD(PAYMENT_METHOD instance);
    partial void UpdatePAYMENT_METHOD(PAYMENT_METHOD instance);
    partial void DeletePAYMENT_METHOD(PAYMENT_METHOD instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertSELLER(SELLER instance);
    partial void UpdateSELLER(SELLER instance);
    partial void DeleteSELLER(SELLER instance);
    #endregion
		
		public QLQADataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_QUANAOOConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLQADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLQADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLQADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLQADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BRAND> BRANDs
		{
			get
			{
				return this.GetTable<BRAND>();
			}
		}
		
		public System.Data.Linq.Table<VOUCHER> VOUCHERs
		{
			get
			{
				return this.GetTable<VOUCHER>();
			}
		}
		
		public System.Data.Linq.Table<BUYER> BUYERs
		{
			get
			{
				return this.GetTable<BUYER>();
			}
		}
		
		public System.Data.Linq.Table<CART> CARTs
		{
			get
			{
				return this.GetTable<CART>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORY> CATEGORies
		{
			get
			{
				return this.GetTable<CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<CHARIRY_PRODUCT> CHARIRY_PRODUCTs
		{
			get
			{
				return this.GetTable<CHARIRY_PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<CHARITY_ORGANIZATION> CHARITY_ORGANIZATIONs
		{
			get
			{
				return this.GetTable<CHARITY_ORGANIZATION>();
			}
		}
		
		public System.Data.Linq.Table<DELIVERY> DELIVERies
		{
			get
			{
				return this.GetTable<DELIVERY>();
			}
		}
		
		public System.Data.Linq.Table<DONATE> DONATEs
		{
			get
			{
				return this.GetTable<DONATE>();
			}
		}
		
		public System.Data.Linq.Table<DONOR> DONORs
		{
			get
			{
				return this.GetTable<DONOR>();
			}
		}
		
		public System.Data.Linq.Table<LOGIN> LOGINs
		{
			get
			{
				return this.GetTable<LOGIN>();
			}
		}
		
		public System.Data.Linq.Table<MANAGE> MANAGEs
		{
			get
			{
				return this.GetTable<MANAGE>();
			}
		}
		
		public System.Data.Linq.Table<MESSAGE> MESSAGEs
		{
			get
			{
				return this.GetTable<MESSAGE>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this.GetTable<ORDER_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<PAYMENT_METHOD> PAYMENT_METHODs
		{
			get
			{
				return this.GetTable<PAYMENT_METHOD>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<SELLER> SELLERs
		{
			get
			{
				return this.GetTable<SELLER>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BRAND")]
	public partial class BRAND : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBrand;
		
		private string _TenBrand;
		
		private string _HinhMH;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBrandChanging(string value);
    partial void OnMaBrandChanged();
    partial void OnTenBrandChanging(string value);
    partial void OnTenBrandChanged();
    partial void OnHinhMHChanging(string value);
    partial void OnHinhMHChanged();
    #endregion
		
		public BRAND()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBrand", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBrand
		{
			get
			{
				return this._MaBrand;
			}
			set
			{
				if ((this._MaBrand != value))
				{
					this.OnMaBrandChanging(value);
					this.SendPropertyChanging();
					this._MaBrand = value;
					this.SendPropertyChanged("MaBrand");
					this.OnMaBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBrand", DbType="NVarChar(30)")]
		public string TenBrand
		{
			get
			{
				return this._TenBrand;
			}
			set
			{
				if ((this._TenBrand != value))
				{
					this.OnTenBrandChanging(value);
					this.SendPropertyChanging();
					this._TenBrand = value;
					this.SendPropertyChanged("TenBrand");
					this.OnTenBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhMH", DbType="VarChar(30)")]
		public string HinhMH
		{
			get
			{
				return this._HinhMH;
			}
			set
			{
				if ((this._HinhMH != value))
				{
					this.OnHinhMHChanging(value);
					this.SendPropertyChanging();
					this._HinhMH = value;
					this.SendPropertyChanged("HinhMH");
					this.OnHinhMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BRAND_PRODUCT", Storage="_PRODUCTs", ThisKey="MaBrand", OtherKey="MaBrand")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.BRAND = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.BRAND = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VOUCHER")]
	public partial class VOUCHER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiamGia;
		
		private string _MaQL;
		
		private System.Nullable<int> _SoLuongGiam;
		
		private System.Nullable<int> _PhanGiam;
		
		private System.Nullable<System.DateTime> _TGBatDau;
		
		private System.Nullable<System.DateTime> _TGKetThuc;
		
		private EntityRef<MANAGE> _MANAGE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiamGiaChanging(string value);
    partial void OnMaGiamGiaChanged();
    partial void OnMaQLChanging(string value);
    partial void OnMaQLChanged();
    partial void OnSoLuongGiamChanging(System.Nullable<int> value);
    partial void OnSoLuongGiamChanged();
    partial void OnPhanGiamChanging(System.Nullable<int> value);
    partial void OnPhanGiamChanged();
    partial void OnTGBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnTGBatDauChanged();
    partial void OnTGKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnTGKetThucChanged();
    #endregion
		
		public VOUCHER()
		{
			this._MANAGE = default(EntityRef<MANAGE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiamGia", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiamGia
		{
			get
			{
				return this._MaGiamGia;
			}
			set
			{
				if ((this._MaGiamGia != value))
				{
					this.OnMaGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._MaGiamGia = value;
					this.SendPropertyChanged("MaGiamGia");
					this.OnMaGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQL", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaQL
		{
			get
			{
				return this._MaQL;
			}
			set
			{
				if ((this._MaQL != value))
				{
					if (this._MANAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQLChanging(value);
					this.SendPropertyChanging();
					this._MaQL = value;
					this.SendPropertyChanged("MaQL");
					this.OnMaQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongGiam", DbType="Int")]
		public System.Nullable<int> SoLuongGiam
		{
			get
			{
				return this._SoLuongGiam;
			}
			set
			{
				if ((this._SoLuongGiam != value))
				{
					this.OnSoLuongGiamChanging(value);
					this.SendPropertyChanging();
					this._SoLuongGiam = value;
					this.SendPropertyChanged("SoLuongGiam");
					this.OnSoLuongGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanGiam", DbType="Int")]
		public System.Nullable<int> PhanGiam
		{
			get
			{
				return this._PhanGiam;
			}
			set
			{
				if ((this._PhanGiam != value))
				{
					this.OnPhanGiamChanging(value);
					this.SendPropertyChanging();
					this._PhanGiam = value;
					this.SendPropertyChanged("PhanGiam");
					this.OnPhanGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGBatDau
		{
			get
			{
				return this._TGBatDau;
			}
			set
			{
				if ((this._TGBatDau != value))
				{
					this.OnTGBatDauChanging(value);
					this.SendPropertyChanging();
					this._TGBatDau = value;
					this.SendPropertyChanged("TGBatDau");
					this.OnTGBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGKetThuc
		{
			get
			{
				return this._TGKetThuc;
			}
			set
			{
				if ((this._TGKetThuc != value))
				{
					this.OnTGKetThucChanging(value);
					this.SendPropertyChanging();
					this._TGKetThuc = value;
					this.SendPropertyChanged("TGKetThuc");
					this.OnTGKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANAGE_VOUCHER", Storage="_MANAGE", ThisKey="MaQL", OtherKey="MaQL", IsForeignKey=true)]
		public MANAGE MANAGE
		{
			get
			{
				return this._MANAGE.Entity;
			}
			set
			{
				MANAGE previousValue = this._MANAGE.Entity;
				if (((previousValue != value) 
							|| (this._MANAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANAGE.Entity = null;
						previousValue.VOUCHERs.Remove(this);
					}
					this._MANAGE.Entity = value;
					if ((value != null))
					{
						value.VOUCHERs.Add(this);
						this._MaQL = value.MaQL;
					}
					else
					{
						this._MaQL = default(string);
					}
					this.SendPropertyChanged("MANAGE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BUYER")]
	public partial class BUYER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBuyer;
		
		private string _TenBuyer;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private string _MaLogin;
		
		private string _AvatarBuyer;
		
		private EntitySet<CART> _CARTs;
		
		private EntitySet<MESSAGE> _MESSAGEs;
		
		private EntityRef<LOGIN> _LOGIN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBuyerChanging(string value);
    partial void OnMaBuyerChanged();
    partial void OnTenBuyerChanging(string value);
    partial void OnTenBuyerChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnMaLoginChanging(string value);
    partial void OnMaLoginChanged();
    partial void OnAvatarBuyerChanging(string value);
    partial void OnAvatarBuyerChanged();
    #endregion
		
		public BUYER()
		{
			this._CARTs = new EntitySet<CART>(new Action<CART>(this.attach_CARTs), new Action<CART>(this.detach_CARTs));
			this._MESSAGEs = new EntitySet<MESSAGE>(new Action<MESSAGE>(this.attach_MESSAGEs), new Action<MESSAGE>(this.detach_MESSAGEs));
			this._LOGIN = default(EntityRef<LOGIN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBuyer", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBuyer
		{
			get
			{
				return this._MaBuyer;
			}
			set
			{
				if ((this._MaBuyer != value))
				{
					this.OnMaBuyerChanging(value);
					this.SendPropertyChanging();
					this._MaBuyer = value;
					this.SendPropertyChanged("MaBuyer");
					this.OnMaBuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBuyer", DbType="NVarChar(150)")]
		public string TenBuyer
		{
			get
			{
				return this._TenBuyer;
			}
			set
			{
				if ((this._TenBuyer != value))
				{
					this.OnTenBuyerChanging(value);
					this.SendPropertyChanging();
					this._TenBuyer = value;
					this.SendPropertyChanged("TenBuyer");
					this.OnTenBuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLogin", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaLogin
		{
			get
			{
				return this._MaLogin;
			}
			set
			{
				if ((this._MaLogin != value))
				{
					if (this._LOGIN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoginChanging(value);
					this.SendPropertyChanging();
					this._MaLogin = value;
					this.SendPropertyChanged("MaLogin");
					this.OnMaLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvatarBuyer", DbType="VarChar(50)")]
		public string AvatarBuyer
		{
			get
			{
				return this._AvatarBuyer;
			}
			set
			{
				if ((this._AvatarBuyer != value))
				{
					this.OnAvatarBuyerChanging(value);
					this.SendPropertyChanging();
					this._AvatarBuyer = value;
					this.SendPropertyChanged("AvatarBuyer");
					this.OnAvatarBuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUYER_CART", Storage="_CARTs", ThisKey="MaBuyer", OtherKey="MaBuyer")]
		public EntitySet<CART> CARTs
		{
			get
			{
				return this._CARTs;
			}
			set
			{
				this._CARTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUYER_MESSAGE", Storage="_MESSAGEs", ThisKey="MaBuyer", OtherKey="MaBuyer")]
		public EntitySet<MESSAGE> MESSAGEs
		{
			get
			{
				return this._MESSAGEs;
			}
			set
			{
				this._MESSAGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOGIN_BUYER", Storage="_LOGIN", ThisKey="MaLogin", OtherKey="MaLogin", IsForeignKey=true)]
		public LOGIN LOGIN
		{
			get
			{
				return this._LOGIN.Entity;
			}
			set
			{
				LOGIN previousValue = this._LOGIN.Entity;
				if (((previousValue != value) 
							|| (this._LOGIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOGIN.Entity = null;
						previousValue.BUYERs.Remove(this);
					}
					this._LOGIN.Entity = value;
					if ((value != null))
					{
						value.BUYERs.Add(this);
						this._MaLogin = value.MaLogin;
					}
					else
					{
						this._MaLogin = default(string);
					}
					this.SendPropertyChanged("LOGIN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.BUYER = this;
		}
		
		private void detach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.BUYER = null;
		}
		
		private void attach_MESSAGEs(MESSAGE entity)
		{
			this.SendPropertyChanging();
			entity.BUYER = this;
		}
		
		private void detach_MESSAGEs(MESSAGE entity)
		{
			this.SendPropertyChanging();
			entity.BUYER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CART")]
	public partial class CART : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _ThoiGian;
		
		private int _SoLuong;
		
		private string _Size;
		
		private string _MaGioHang;
		
		private string _MaBuyer;
		
		private string _MaSP;
		
		private EntitySet<ORDER_DETAIL> _ORDER_DETAILs;
		
		private EntityRef<BUYER> _BUYER;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThoiGianChanging(System.DateTime value);
    partial void OnThoiGianChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnMaGioHangChanging(string value);
    partial void OnMaGioHangChanged();
    partial void OnMaBuyerChanging(string value);
    partial void OnMaBuyerChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    #endregion
		
		public CART()
		{
			this._ORDER_DETAILs = new EntitySet<ORDER_DETAIL>(new Action<ORDER_DETAIL>(this.attach_ORDER_DETAILs), new Action<ORDER_DETAIL>(this.detach_ORDER_DETAILs));
			this._BUYER = default(EntityRef<BUYER>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="Date NOT NULL")]
		public System.DateTime ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioHang", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGioHang
		{
			get
			{
				return this._MaGioHang;
			}
			set
			{
				if ((this._MaGioHang != value))
				{
					this.OnMaGioHangChanging(value);
					this.SendPropertyChanging();
					this._MaGioHang = value;
					this.SendPropertyChanged("MaGioHang");
					this.OnMaGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBuyer", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaBuyer
		{
			get
			{
				return this._MaBuyer;
			}
			set
			{
				if ((this._MaBuyer != value))
				{
					if (this._BUYER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBuyerChanging(value);
					this.SendPropertyChanging();
					this._MaBuyer = value;
					this.SendPropertyChanged("MaBuyer");
					this.OnMaBuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CART_ORDER_DETAIL", Storage="_ORDER_DETAILs", ThisKey="MaGioHang", OtherKey="MaGioHang")]
		public EntitySet<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this._ORDER_DETAILs;
			}
			set
			{
				this._ORDER_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUYER_CART", Storage="_BUYER", ThisKey="MaBuyer", OtherKey="MaBuyer", IsForeignKey=true)]
		public BUYER BUYER
		{
			get
			{
				return this._BUYER.Entity;
			}
			set
			{
				BUYER previousValue = this._BUYER.Entity;
				if (((previousValue != value) 
							|| (this._BUYER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUYER.Entity = null;
						previousValue.CARTs.Remove(this);
					}
					this._BUYER.Entity = value;
					if ((value != null))
					{
						value.CARTs.Add(this);
						this._MaBuyer = value.MaBuyer;
					}
					else
					{
						this._MaBuyer = default(string);
					}
					this.SendPropertyChanged("BUYER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_CART", Storage="_PRODUCT", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.CARTs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.CARTs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.CART = this;
		}
		
		private void detach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.CART = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORY")]
	public partial class CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private string _HinhMH;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnHinhMHChanging(string value);
    partial void OnHinhMHChanged();
    #endregion
		
		public CATEGORY()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhMH", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HinhMH
		{
			get
			{
				return this._HinhMH;
			}
			set
			{
				if ((this._HinhMH != value))
				{
					this.OnHinhMHChanging(value);
					this.SendPropertyChanging();
					this._HinhMH = value;
					this.SendPropertyChanged("HinhMH");
					this.OnHinhMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_PRODUCT", Storage="_PRODUCTs", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHARIRY_PRODUCT")]
	public partial class CHARIRY_PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSPC;
		
		private string _TenSPC;
		
		private string _MoTaC;
		
		private string _Hinh1C;
		
		private string _Hinh2C;
		
		private string _Hinh3C;
		
		private string _TinhTrang;
		
		private string _MaDonor;
		
		private EntitySet<DONATE> _DONATEs;
		
		private EntityRef<DONOR> _DONOR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPCChanging(string value);
    partial void OnMaSPCChanged();
    partial void OnTenSPCChanging(string value);
    partial void OnTenSPCChanged();
    partial void OnMoTaCChanging(string value);
    partial void OnMoTaCChanged();
    partial void OnHinh1CChanging(string value);
    partial void OnHinh1CChanged();
    partial void OnHinh2CChanging(string value);
    partial void OnHinh2CChanged();
    partial void OnHinh3CChanging(string value);
    partial void OnHinh3CChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMaDonorChanging(string value);
    partial void OnMaDonorChanged();
    #endregion
		
		public CHARIRY_PRODUCT()
		{
			this._DONATEs = new EntitySet<DONATE>(new Action<DONATE>(this.attach_DONATEs), new Action<DONATE>(this.detach_DONATEs));
			this._DONOR = default(EntityRef<DONOR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSPC", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSPC
		{
			get
			{
				return this._MaSPC;
			}
			set
			{
				if ((this._MaSPC != value))
				{
					this.OnMaSPCChanging(value);
					this.SendPropertyChanging();
					this._MaSPC = value;
					this.SendPropertyChanged("MaSPC");
					this.OnMaSPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSPC", DbType="NVarChar(90)")]
		public string TenSPC
		{
			get
			{
				return this._TenSPC;
			}
			set
			{
				if ((this._TenSPC != value))
				{
					this.OnTenSPCChanging(value);
					this.SendPropertyChanging();
					this._TenSPC = value;
					this.SendPropertyChanged("TenSPC");
					this.OnTenSPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaC", DbType="NVarChar(MAX)")]
		public string MoTaC
		{
			get
			{
				return this._MoTaC;
			}
			set
			{
				if ((this._MoTaC != value))
				{
					this.OnMoTaCChanging(value);
					this.SendPropertyChanging();
					this._MoTaC = value;
					this.SendPropertyChanged("MoTaC");
					this.OnMoTaCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh1C", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hinh1C
		{
			get
			{
				return this._Hinh1C;
			}
			set
			{
				if ((this._Hinh1C != value))
				{
					this.OnHinh1CChanging(value);
					this.SendPropertyChanging();
					this._Hinh1C = value;
					this.SendPropertyChanged("Hinh1C");
					this.OnHinh1CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh2C", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hinh2C
		{
			get
			{
				return this._Hinh2C;
			}
			set
			{
				if ((this._Hinh2C != value))
				{
					this.OnHinh2CChanging(value);
					this.SendPropertyChanging();
					this._Hinh2C = value;
					this.SendPropertyChanged("Hinh2C");
					this.OnHinh2CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh3C", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hinh3C
		{
			get
			{
				return this._Hinh3C;
			}
			set
			{
				if ((this._Hinh3C != value))
				{
					this.OnHinh3CChanging(value);
					this.SendPropertyChanging();
					this._Hinh3C = value;
					this.SendPropertyChanged("Hinh3C");
					this.OnHinh3CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonor", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaDonor
		{
			get
			{
				return this._MaDonor;
			}
			set
			{
				if ((this._MaDonor != value))
				{
					if (this._DONOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDonorChanging(value);
					this.SendPropertyChanging();
					this._MaDonor = value;
					this.SendPropertyChanged("MaDonor");
					this.OnMaDonorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARIRY_PRODUCT_DONATE", Storage="_DONATEs", ThisKey="MaSPC", OtherKey="MaSPC")]
		public EntitySet<DONATE> DONATEs
		{
			get
			{
				return this._DONATEs;
			}
			set
			{
				this._DONATEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONOR_CHARIRY_PRODUCT", Storage="_DONOR", ThisKey="MaDonor", OtherKey="MaDonor", IsForeignKey=true)]
		public DONOR DONOR
		{
			get
			{
				return this._DONOR.Entity;
			}
			set
			{
				DONOR previousValue = this._DONOR.Entity;
				if (((previousValue != value) 
							|| (this._DONOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONOR.Entity = null;
						previousValue.CHARIRY_PRODUCTs.Remove(this);
					}
					this._DONOR.Entity = value;
					if ((value != null))
					{
						value.CHARIRY_PRODUCTs.Add(this);
						this._MaDonor = value.MaDonor;
					}
					else
					{
						this._MaDonor = default(string);
					}
					this.SendPropertyChanged("DONOR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONATEs(DONATE entity)
		{
			this.SendPropertyChanging();
			entity.CHARIRY_PRODUCT = this;
		}
		
		private void detach_DONATEs(DONATE entity)
		{
			this.SendPropertyChanging();
			entity.CHARIRY_PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHARITY_ORGANIZATION")]
	public partial class CHARITY_ORGANIZATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTC;
		
		private string _TenTC;
		
		private string _DiaChiTC;
		
		private EntitySet<DONATE> _DONATEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTCChanging(string value);
    partial void OnMaTCChanged();
    partial void OnTenTCChanging(string value);
    partial void OnTenTCChanged();
    partial void OnDiaChiTCChanging(string value);
    partial void OnDiaChiTCChanged();
    #endregion
		
		public CHARITY_ORGANIZATION()
		{
			this._DONATEs = new EntitySet<DONATE>(new Action<DONATE>(this.attach_DONATEs), new Action<DONATE>(this.detach_DONATEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTC", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTC
		{
			get
			{
				return this._MaTC;
			}
			set
			{
				if ((this._MaTC != value))
				{
					this.OnMaTCChanging(value);
					this.SendPropertyChanging();
					this._MaTC = value;
					this.SendPropertyChanged("MaTC");
					this.OnMaTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTC", DbType="NVarChar(50)")]
		public string TenTC
		{
			get
			{
				return this._TenTC;
			}
			set
			{
				if ((this._TenTC != value))
				{
					this.OnTenTCChanging(value);
					this.SendPropertyChanging();
					this._TenTC = value;
					this.SendPropertyChanged("TenTC");
					this.OnTenTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiTC", DbType="NVarChar(50)")]
		public string DiaChiTC
		{
			get
			{
				return this._DiaChiTC;
			}
			set
			{
				if ((this._DiaChiTC != value))
				{
					this.OnDiaChiTCChanging(value);
					this.SendPropertyChanging();
					this._DiaChiTC = value;
					this.SendPropertyChanged("DiaChiTC");
					this.OnDiaChiTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARITY_ORGANIZATION_DONATE", Storage="_DONATEs", ThisKey="MaTC", OtherKey="MaTC")]
		public EntitySet<DONATE> DONATEs
		{
			get
			{
				return this._DONATEs;
			}
			set
			{
				this._DONATEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONATEs(DONATE entity)
		{
			this.SendPropertyChanging();
			entity.CHARITY_ORGANIZATION = this;
		}
		
		private void detach_DONATEs(DONATE entity)
		{
			this.SendPropertyChanging();
			entity.CHARITY_ORGANIZATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DELIVERY")]
	public partial class DELIVERY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThanhToan;
		
		private string _PTThanhToan;
		
		private EntitySet<PAYMENT_METHOD> _PAYMENT_METHODs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThanhToanChanging(string value);
    partial void OnMaThanhToanChanged();
    partial void OnPTThanhToanChanging(string value);
    partial void OnPTThanhToanChanged();
    #endregion
		
		public DELIVERY()
		{
			this._PAYMENT_METHODs = new EntitySet<PAYMENT_METHOD>(new Action<PAYMENT_METHOD>(this.attach_PAYMENT_METHODs), new Action<PAYMENT_METHOD>(this.detach_PAYMENT_METHODs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThanhToan", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThanhToan
		{
			get
			{
				return this._MaThanhToan;
			}
			set
			{
				if ((this._MaThanhToan != value))
				{
					this.OnMaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._MaThanhToan = value;
					this.SendPropertyChanged("MaThanhToan");
					this.OnMaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTThanhToan", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string PTThanhToan
		{
			get
			{
				return this._PTThanhToan;
			}
			set
			{
				if ((this._PTThanhToan != value))
				{
					this.OnPTThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PTThanhToan = value;
					this.SendPropertyChanged("PTThanhToan");
					this.OnPTThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DELIVERY_PAYMENT_METHOD", Storage="_PAYMENT_METHODs", ThisKey="MaThanhToan", OtherKey="MaThanhToan")]
		public EntitySet<PAYMENT_METHOD> PAYMENT_METHODs
		{
			get
			{
				return this._PAYMENT_METHODs;
			}
			set
			{
				this._PAYMENT_METHODs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAYMENT_METHODs(PAYMENT_METHOD entity)
		{
			this.SendPropertyChanging();
			entity.DELIVERY = this;
		}
		
		private void detach_PAYMENT_METHODs(PAYMENT_METHOD entity)
		{
			this.SendPropertyChanging();
			entity.DELIVERY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONATE")]
	public partial class DONATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTC;
		
		private string _MaSPC;
		
		private EntityRef<CHARIRY_PRODUCT> _CHARIRY_PRODUCT;
		
		private EntityRef<CHARITY_ORGANIZATION> _CHARITY_ORGANIZATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTCChanging(string value);
    partial void OnMaTCChanged();
    partial void OnMaSPCChanging(string value);
    partial void OnMaSPCChanged();
    #endregion
		
		public DONATE()
		{
			this._CHARIRY_PRODUCT = default(EntityRef<CHARIRY_PRODUCT>);
			this._CHARITY_ORGANIZATION = default(EntityRef<CHARITY_ORGANIZATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTC", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTC
		{
			get
			{
				return this._MaTC;
			}
			set
			{
				if ((this._MaTC != value))
				{
					if (this._CHARITY_ORGANIZATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTCChanging(value);
					this.SendPropertyChanging();
					this._MaTC = value;
					this.SendPropertyChanged("MaTC");
					this.OnMaTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSPC", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSPC
		{
			get
			{
				return this._MaSPC;
			}
			set
			{
				if ((this._MaSPC != value))
				{
					if (this._CHARIRY_PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPCChanging(value);
					this.SendPropertyChanging();
					this._MaSPC = value;
					this.SendPropertyChanged("MaSPC");
					this.OnMaSPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARIRY_PRODUCT_DONATE", Storage="_CHARIRY_PRODUCT", ThisKey="MaSPC", OtherKey="MaSPC", IsForeignKey=true)]
		public CHARIRY_PRODUCT CHARIRY_PRODUCT
		{
			get
			{
				return this._CHARIRY_PRODUCT.Entity;
			}
			set
			{
				CHARIRY_PRODUCT previousValue = this._CHARIRY_PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._CHARIRY_PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHARIRY_PRODUCT.Entity = null;
						previousValue.DONATEs.Remove(this);
					}
					this._CHARIRY_PRODUCT.Entity = value;
					if ((value != null))
					{
						value.DONATEs.Add(this);
						this._MaSPC = value.MaSPC;
					}
					else
					{
						this._MaSPC = default(string);
					}
					this.SendPropertyChanged("CHARIRY_PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARITY_ORGANIZATION_DONATE", Storage="_CHARITY_ORGANIZATION", ThisKey="MaTC", OtherKey="MaTC", IsForeignKey=true)]
		public CHARITY_ORGANIZATION CHARITY_ORGANIZATION
		{
			get
			{
				return this._CHARITY_ORGANIZATION.Entity;
			}
			set
			{
				CHARITY_ORGANIZATION previousValue = this._CHARITY_ORGANIZATION.Entity;
				if (((previousValue != value) 
							|| (this._CHARITY_ORGANIZATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHARITY_ORGANIZATION.Entity = null;
						previousValue.DONATEs.Remove(this);
					}
					this._CHARITY_ORGANIZATION.Entity = value;
					if ((value != null))
					{
						value.DONATEs.Add(this);
						this._MaTC = value.MaTC;
					}
					else
					{
						this._MaTC = default(string);
					}
					this.SendPropertyChanged("CHARITY_ORGANIZATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONOR")]
	public partial class DONOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDonor;
		
		private string _TenDonor;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private string _MaLogin;
		
		private EntitySet<CHARIRY_PRODUCT> _CHARIRY_PRODUCTs;
		
		private EntityRef<LOGIN> _LOGIN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonorChanging(string value);
    partial void OnMaDonorChanged();
    partial void OnTenDonorChanging(string value);
    partial void OnTenDonorChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnMaLoginChanging(string value);
    partial void OnMaLoginChanged();
    #endregion
		
		public DONOR()
		{
			this._CHARIRY_PRODUCTs = new EntitySet<CHARIRY_PRODUCT>(new Action<CHARIRY_PRODUCT>(this.attach_CHARIRY_PRODUCTs), new Action<CHARIRY_PRODUCT>(this.detach_CHARIRY_PRODUCTs));
			this._LOGIN = default(EntityRef<LOGIN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonor", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDonor
		{
			get
			{
				return this._MaDonor;
			}
			set
			{
				if ((this._MaDonor != value))
				{
					this.OnMaDonorChanging(value);
					this.SendPropertyChanging();
					this._MaDonor = value;
					this.SendPropertyChanged("MaDonor");
					this.OnMaDonorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDonor", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenDonor
		{
			get
			{
				return this._TenDonor;
			}
			set
			{
				if ((this._TenDonor != value))
				{
					this.OnTenDonorChanging(value);
					this.SendPropertyChanging();
					this._TenDonor = value;
					this.SendPropertyChanged("TenDonor");
					this.OnTenDonorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLogin", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaLogin
		{
			get
			{
				return this._MaLogin;
			}
			set
			{
				if ((this._MaLogin != value))
				{
					if (this._LOGIN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoginChanging(value);
					this.SendPropertyChanging();
					this._MaLogin = value;
					this.SendPropertyChanged("MaLogin");
					this.OnMaLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONOR_CHARIRY_PRODUCT", Storage="_CHARIRY_PRODUCTs", ThisKey="MaDonor", OtherKey="MaDonor")]
		public EntitySet<CHARIRY_PRODUCT> CHARIRY_PRODUCTs
		{
			get
			{
				return this._CHARIRY_PRODUCTs;
			}
			set
			{
				this._CHARIRY_PRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOGIN_DONOR", Storage="_LOGIN", ThisKey="MaLogin", OtherKey="MaLogin", IsForeignKey=true)]
		public LOGIN LOGIN
		{
			get
			{
				return this._LOGIN.Entity;
			}
			set
			{
				LOGIN previousValue = this._LOGIN.Entity;
				if (((previousValue != value) 
							|| (this._LOGIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOGIN.Entity = null;
						previousValue.DONORs.Remove(this);
					}
					this._LOGIN.Entity = value;
					if ((value != null))
					{
						value.DONORs.Add(this);
						this._MaLogin = value.MaLogin;
					}
					else
					{
						this._MaLogin = default(string);
					}
					this.SendPropertyChanged("LOGIN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHARIRY_PRODUCTs(CHARIRY_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.DONOR = this;
		}
		
		private void detach_CHARIRY_PRODUCTs(CHARIRY_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.DONOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOGINS")]
	public partial class LOGIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLogin;
		
		private string _TenLogin;
		
		private string _MatKhauLogin;
		
		private string _VaiTro;
		
		private string _AVT;
		
		private EntitySet<BUYER> _BUYERs;
		
		private EntitySet<DONOR> _DONORs;
		
		private EntitySet<SELLER> _SELLERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoginChanging(string value);
    partial void OnMaLoginChanged();
    partial void OnTenLoginChanging(string value);
    partial void OnTenLoginChanged();
    partial void OnMatKhauLoginChanging(string value);
    partial void OnMatKhauLoginChanged();
    partial void OnVaiTroChanging(string value);
    partial void OnVaiTroChanged();
    partial void OnAVTChanging(string value);
    partial void OnAVTChanged();
    #endregion
		
		public LOGIN()
		{
			this._BUYERs = new EntitySet<BUYER>(new Action<BUYER>(this.attach_BUYERs), new Action<BUYER>(this.detach_BUYERs));
			this._DONORs = new EntitySet<DONOR>(new Action<DONOR>(this.attach_DONORs), new Action<DONOR>(this.detach_DONORs));
			this._SELLERs = new EntitySet<SELLER>(new Action<SELLER>(this.attach_SELLERs), new Action<SELLER>(this.detach_SELLERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLogin", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLogin
		{
			get
			{
				return this._MaLogin;
			}
			set
			{
				if ((this._MaLogin != value))
				{
					this.OnMaLoginChanging(value);
					this.SendPropertyChanging();
					this._MaLogin = value;
					this.SendPropertyChanged("MaLogin");
					this.OnMaLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLogin", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TenLogin
		{
			get
			{
				return this._TenLogin;
			}
			set
			{
				if ((this._TenLogin != value))
				{
					this.OnTenLoginChanging(value);
					this.SendPropertyChanging();
					this._TenLogin = value;
					this.SendPropertyChanged("TenLogin");
					this.OnTenLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhauLogin", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MatKhauLogin
		{
			get
			{
				return this._MatKhauLogin;
			}
			set
			{
				if ((this._MatKhauLogin != value))
				{
					this.OnMatKhauLoginChanging(value);
					this.SendPropertyChanging();
					this._MatKhauLogin = value;
					this.SendPropertyChanged("MatKhauLogin");
					this.OnMatKhauLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaiTro", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string VaiTro
		{
			get
			{
				return this._VaiTro;
			}
			set
			{
				if ((this._VaiTro != value))
				{
					this.OnVaiTroChanging(value);
					this.SendPropertyChanging();
					this._VaiTro = value;
					this.SendPropertyChanged("VaiTro");
					this.OnVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVT", DbType="VarChar(50)")]
		public string AVT
		{
			get
			{
				return this._AVT;
			}
			set
			{
				if ((this._AVT != value))
				{
					this.OnAVTChanging(value);
					this.SendPropertyChanging();
					this._AVT = value;
					this.SendPropertyChanged("AVT");
					this.OnAVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOGIN_BUYER", Storage="_BUYERs", ThisKey="MaLogin", OtherKey="MaLogin")]
		public EntitySet<BUYER> BUYERs
		{
			get
			{
				return this._BUYERs;
			}
			set
			{
				this._BUYERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOGIN_DONOR", Storage="_DONORs", ThisKey="MaLogin", OtherKey="MaLogin")]
		public EntitySet<DONOR> DONORs
		{
			get
			{
				return this._DONORs;
			}
			set
			{
				this._DONORs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOGIN_SELLER", Storage="_SELLERs", ThisKey="MaLogin", OtherKey="MaLogin")]
		public EntitySet<SELLER> SELLERs
		{
			get
			{
				return this._SELLERs;
			}
			set
			{
				this._SELLERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUYERs(BUYER entity)
		{
			this.SendPropertyChanging();
			entity.LOGIN = this;
		}
		
		private void detach_BUYERs(BUYER entity)
		{
			this.SendPropertyChanging();
			entity.LOGIN = null;
		}
		
		private void attach_DONORs(DONOR entity)
		{
			this.SendPropertyChanging();
			entity.LOGIN = this;
		}
		
		private void detach_DONORs(DONOR entity)
		{
			this.SendPropertyChanging();
			entity.LOGIN = null;
		}
		
		private void attach_SELLERs(SELLER entity)
		{
			this.SendPropertyChanging();
			entity.LOGIN = this;
		}
		
		private void detach_SELLERs(SELLER entity)
		{
			this.SendPropertyChanging();
			entity.LOGIN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MANAGE")]
	public partial class MANAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaQL;
		
		private EntitySet<VOUCHER> _VOUCHERs;
		
		private EntitySet<MESSAGE> _MESSAGEs;
		
		private EntitySet<ORDER_DETAIL> _ORDER_DETAILs;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
		private EntitySet<SELLER> _SELLERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQLChanging(string value);
    partial void OnMaQLChanged();
    #endregion
		
		public MANAGE()
		{
			this._VOUCHERs = new EntitySet<VOUCHER>(new Action<VOUCHER>(this.attach_VOUCHERs), new Action<VOUCHER>(this.detach_VOUCHERs));
			this._MESSAGEs = new EntitySet<MESSAGE>(new Action<MESSAGE>(this.attach_MESSAGEs), new Action<MESSAGE>(this.detach_MESSAGEs));
			this._ORDER_DETAILs = new EntitySet<ORDER_DETAIL>(new Action<ORDER_DETAIL>(this.attach_ORDER_DETAILs), new Action<ORDER_DETAIL>(this.detach_ORDER_DETAILs));
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			this._SELLERs = new EntitySet<SELLER>(new Action<SELLER>(this.attach_SELLERs), new Action<SELLER>(this.detach_SELLERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQL", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaQL
		{
			get
			{
				return this._MaQL;
			}
			set
			{
				if ((this._MaQL != value))
				{
					this.OnMaQLChanging(value);
					this.SendPropertyChanging();
					this._MaQL = value;
					this.SendPropertyChanged("MaQL");
					this.OnMaQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANAGE_VOUCHER", Storage="_VOUCHERs", ThisKey="MaQL", OtherKey="MaQL")]
		public EntitySet<VOUCHER> VOUCHERs
		{
			get
			{
				return this._VOUCHERs;
			}
			set
			{
				this._VOUCHERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANAGE_MESSAGE", Storage="_MESSAGEs", ThisKey="MaQL", OtherKey="MaQL")]
		public EntitySet<MESSAGE> MESSAGEs
		{
			get
			{
				return this._MESSAGEs;
			}
			set
			{
				this._MESSAGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANAGE_ORDER_DETAIL", Storage="_ORDER_DETAILs", ThisKey="MaQL", OtherKey="MaQL")]
		public EntitySet<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this._ORDER_DETAILs;
			}
			set
			{
				this._ORDER_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANAGE_PRODUCT", Storage="_PRODUCTs", ThisKey="MaQL", OtherKey="MaQL")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANAGE_SELLER", Storage="_SELLERs", ThisKey="MaQL", OtherKey="MaQL")]
		public EntitySet<SELLER> SELLERs
		{
			get
			{
				return this._SELLERs;
			}
			set
			{
				this._SELLERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VOUCHERs(VOUCHER entity)
		{
			this.SendPropertyChanging();
			entity.MANAGE = this;
		}
		
		private void detach_VOUCHERs(VOUCHER entity)
		{
			this.SendPropertyChanging();
			entity.MANAGE = null;
		}
		
		private void attach_MESSAGEs(MESSAGE entity)
		{
			this.SendPropertyChanging();
			entity.MANAGE = this;
		}
		
		private void detach_MESSAGEs(MESSAGE entity)
		{
			this.SendPropertyChanging();
			entity.MANAGE = null;
		}
		
		private void attach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.MANAGE = this;
		}
		
		private void detach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.MANAGE = null;
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.MANAGE = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.MANAGE = null;
		}
		
		private void attach_SELLERs(SELLER entity)
		{
			this.SendPropertyChanging();
			entity.MANAGE = this;
		}
		
		private void detach_SELLERs(SELLER entity)
		{
			this.SendPropertyChanging();
			entity.MANAGE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MESSAGE")]
	public partial class MESSAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NoiDung;
		
		private System.DateTime _ThoiGianNhan;
		
		private string _MaQL;
		
		private string _MaBuyer;
		
		private EntityRef<BUYER> _BUYER;
		
		private EntityRef<MANAGE> _MANAGE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnThoiGianNhanChanging(System.DateTime value);
    partial void OnThoiGianNhanChanged();
    partial void OnMaQLChanging(string value);
    partial void OnMaQLChanged();
    partial void OnMaBuyerChanging(string value);
    partial void OnMaBuyerChanged();
    #endregion
		
		public MESSAGE()
		{
			this._BUYER = default(EntityRef<BUYER>);
			this._MANAGE = default(EntityRef<MANAGE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianNhan", DbType="Date NOT NULL")]
		public System.DateTime ThoiGianNhan
		{
			get
			{
				return this._ThoiGianNhan;
			}
			set
			{
				if ((this._ThoiGianNhan != value))
				{
					this.OnThoiGianNhanChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianNhan = value;
					this.SendPropertyChanged("ThoiGianNhan");
					this.OnThoiGianNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQL", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaQL
		{
			get
			{
				return this._MaQL;
			}
			set
			{
				if ((this._MaQL != value))
				{
					if (this._MANAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQLChanging(value);
					this.SendPropertyChanging();
					this._MaQL = value;
					this.SendPropertyChanged("MaQL");
					this.OnMaQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBuyer", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBuyer
		{
			get
			{
				return this._MaBuyer;
			}
			set
			{
				if ((this._MaBuyer != value))
				{
					if (this._BUYER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBuyerChanging(value);
					this.SendPropertyChanging();
					this._MaBuyer = value;
					this.SendPropertyChanged("MaBuyer");
					this.OnMaBuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUYER_MESSAGE", Storage="_BUYER", ThisKey="MaBuyer", OtherKey="MaBuyer", IsForeignKey=true)]
		public BUYER BUYER
		{
			get
			{
				return this._BUYER.Entity;
			}
			set
			{
				BUYER previousValue = this._BUYER.Entity;
				if (((previousValue != value) 
							|| (this._BUYER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUYER.Entity = null;
						previousValue.MESSAGEs.Remove(this);
					}
					this._BUYER.Entity = value;
					if ((value != null))
					{
						value.MESSAGEs.Add(this);
						this._MaBuyer = value.MaBuyer;
					}
					else
					{
						this._MaBuyer = default(string);
					}
					this.SendPropertyChanged("BUYER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANAGE_MESSAGE", Storage="_MANAGE", ThisKey="MaQL", OtherKey="MaQL", IsForeignKey=true)]
		public MANAGE MANAGE
		{
			get
			{
				return this._MANAGE.Entity;
			}
			set
			{
				MANAGE previousValue = this._MANAGE.Entity;
				if (((previousValue != value) 
							|| (this._MANAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANAGE.Entity = null;
						previousValue.MESSAGEs.Remove(this);
					}
					this._MANAGE.Entity = value;
					if ((value != null))
					{
						value.MESSAGEs.Add(this);
						this._MaQL = value.MaQL;
					}
					else
					{
						this._MaQL = default(string);
					}
					this.SendPropertyChanged("MANAGE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_DETAILS")]
	public partial class ORDER_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSPChiTiet;
		
		private string _MaQL;
		
		private string _MaGioHang;
		
		private EntityRef<CART> _CART;
		
		private EntityRef<MANAGE> _MANAGE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChiTietChanging(string value);
    partial void OnMaSPChiTietChanged();
    partial void OnMaQLChanging(string value);
    partial void OnMaQLChanged();
    partial void OnMaGioHangChanging(string value);
    partial void OnMaGioHangChanged();
    #endregion
		
		public ORDER_DETAIL()
		{
			this._CART = default(EntityRef<CART>);
			this._MANAGE = default(EntityRef<MANAGE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSPChiTiet", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSPChiTiet
		{
			get
			{
				return this._MaSPChiTiet;
			}
			set
			{
				if ((this._MaSPChiTiet != value))
				{
					this.OnMaSPChiTietChanging(value);
					this.SendPropertyChanging();
					this._MaSPChiTiet = value;
					this.SendPropertyChanged("MaSPChiTiet");
					this.OnMaSPChiTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQL", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaQL
		{
			get
			{
				return this._MaQL;
			}
			set
			{
				if ((this._MaQL != value))
				{
					if (this._MANAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQLChanging(value);
					this.SendPropertyChanging();
					this._MaQL = value;
					this.SendPropertyChanged("MaQL");
					this.OnMaQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioHang", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaGioHang
		{
			get
			{
				return this._MaGioHang;
			}
			set
			{
				if ((this._MaGioHang != value))
				{
					if (this._CART.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGioHangChanging(value);
					this.SendPropertyChanging();
					this._MaGioHang = value;
					this.SendPropertyChanged("MaGioHang");
					this.OnMaGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CART_ORDER_DETAIL", Storage="_CART", ThisKey="MaGioHang", OtherKey="MaGioHang", IsForeignKey=true)]
		public CART CART
		{
			get
			{
				return this._CART.Entity;
			}
			set
			{
				CART previousValue = this._CART.Entity;
				if (((previousValue != value) 
							|| (this._CART.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CART.Entity = null;
						previousValue.ORDER_DETAILs.Remove(this);
					}
					this._CART.Entity = value;
					if ((value != null))
					{
						value.ORDER_DETAILs.Add(this);
						this._MaGioHang = value.MaGioHang;
					}
					else
					{
						this._MaGioHang = default(string);
					}
					this.SendPropertyChanged("CART");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANAGE_ORDER_DETAIL", Storage="_MANAGE", ThisKey="MaQL", OtherKey="MaQL", IsForeignKey=true)]
		public MANAGE MANAGE
		{
			get
			{
				return this._MANAGE.Entity;
			}
			set
			{
				MANAGE previousValue = this._MANAGE.Entity;
				if (((previousValue != value) 
							|| (this._MANAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANAGE.Entity = null;
						previousValue.ORDER_DETAILs.Remove(this);
					}
					this._MANAGE.Entity = value;
					if ((value != null))
					{
						value.ORDER_DETAILs.Add(this);
						this._MaQL = value.MaQL;
					}
					else
					{
						this._MaQL = default(string);
					}
					this.SendPropertyChanged("MANAGE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAYMENT_METHOD")]
	public partial class PAYMENT_METHOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThanhToan;
		
		private string _MaSP;
		
		private EntityRef<DELIVERY> _DELIVERY;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThanhToanChanging(string value);
    partial void OnMaThanhToanChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    #endregion
		
		public PAYMENT_METHOD()
		{
			this._DELIVERY = default(EntityRef<DELIVERY>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThanhToan", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThanhToan
		{
			get
			{
				return this._MaThanhToan;
			}
			set
			{
				if ((this._MaThanhToan != value))
				{
					if (this._DELIVERY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._MaThanhToan = value;
					this.SendPropertyChanged("MaThanhToan");
					this.OnMaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DELIVERY_PAYMENT_METHOD", Storage="_DELIVERY", ThisKey="MaThanhToan", OtherKey="MaThanhToan", IsForeignKey=true)]
		public DELIVERY DELIVERY
		{
			get
			{
				return this._DELIVERY.Entity;
			}
			set
			{
				DELIVERY previousValue = this._DELIVERY.Entity;
				if (((previousValue != value) 
							|| (this._DELIVERY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DELIVERY.Entity = null;
						previousValue.PAYMENT_METHODs.Remove(this);
					}
					this._DELIVERY.Entity = value;
					if ((value != null))
					{
						value.PAYMENT_METHODs.Add(this);
						this._MaThanhToan = value.MaThanhToan;
					}
					else
					{
						this._MaThanhToan = default(string);
					}
					this.SendPropertyChanged("DELIVERY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_PAYMENT_METHOD", Storage="_PRODUCT", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.PAYMENT_METHODs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.PAYMENT_METHODs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _TenSP;
		
		private string _MoTa;
		
		private string _Hinh1;
		
		private string _Hinh2;
		
		private string _Hinh3;
		
		private int _DonGia;
		
		private string _TinhTrang;
		
		private string _KichThuoc1;
		
		private string _KichThuoc2;
		
		private string _KichThuoc3;
		
		private string _MaQL;
		
		private string _MaLoai;
		
		private string _MaBrand;
		
		private EntitySet<CART> _CARTs;
		
		private EntitySet<PAYMENT_METHOD> _PAYMENT_METHODs;
		
		private EntityRef<BRAND> _BRAND;
		
		private EntityRef<CATEGORY> _CATEGORY;
		
		private EntityRef<MANAGE> _MANAGE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnHinh1Changing(string value);
    partial void OnHinh1Changed();
    partial void OnHinh2Changing(string value);
    partial void OnHinh2Changed();
    partial void OnHinh3Changing(string value);
    partial void OnHinh3Changed();
    partial void OnDonGiaChanging(int value);
    partial void OnDonGiaChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnKichThuoc1Changing(string value);
    partial void OnKichThuoc1Changed();
    partial void OnKichThuoc2Changing(string value);
    partial void OnKichThuoc2Changed();
    partial void OnKichThuoc3Changing(string value);
    partial void OnKichThuoc3Changed();
    partial void OnMaQLChanging(string value);
    partial void OnMaQLChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnMaBrandChanging(string value);
    partial void OnMaBrandChanged();
    #endregion
		
		public PRODUCT()
		{
			this._CARTs = new EntitySet<CART>(new Action<CART>(this.attach_CARTs), new Action<CART>(this.detach_CARTs));
			this._PAYMENT_METHODs = new EntitySet<PAYMENT_METHOD>(new Action<PAYMENT_METHOD>(this.attach_PAYMENT_METHODs), new Action<PAYMENT_METHOD>(this.detach_PAYMENT_METHODs));
			this._BRAND = default(EntityRef<BRAND>);
			this._CATEGORY = default(EntityRef<CATEGORY>);
			this._MANAGE = default(EntityRef<MANAGE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(MAX)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hinh1
		{
			get
			{
				return this._Hinh1;
			}
			set
			{
				if ((this._Hinh1 != value))
				{
					this.OnHinh1Changing(value);
					this.SendPropertyChanging();
					this._Hinh1 = value;
					this.SendPropertyChanged("Hinh1");
					this.OnHinh1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hinh2
		{
			get
			{
				return this._Hinh2;
			}
			set
			{
				if ((this._Hinh2 != value))
				{
					this.OnHinh2Changing(value);
					this.SendPropertyChanging();
					this._Hinh2 = value;
					this.SendPropertyChanged("Hinh2");
					this.OnHinh2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh3", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hinh3
		{
			get
			{
				return this._Hinh3;
			}
			set
			{
				if ((this._Hinh3 != value))
				{
					this.OnHinh3Changing(value);
					this.SendPropertyChanging();
					this._Hinh3 = value;
					this.SendPropertyChanged("Hinh3");
					this.OnHinh3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int NOT NULL")]
		public int DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichThuoc1", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string KichThuoc1
		{
			get
			{
				return this._KichThuoc1;
			}
			set
			{
				if ((this._KichThuoc1 != value))
				{
					this.OnKichThuoc1Changing(value);
					this.SendPropertyChanging();
					this._KichThuoc1 = value;
					this.SendPropertyChanged("KichThuoc1");
					this.OnKichThuoc1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichThuoc2", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string KichThuoc2
		{
			get
			{
				return this._KichThuoc2;
			}
			set
			{
				if ((this._KichThuoc2 != value))
				{
					this.OnKichThuoc2Changing(value);
					this.SendPropertyChanging();
					this._KichThuoc2 = value;
					this.SendPropertyChanged("KichThuoc2");
					this.OnKichThuoc2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichThuoc3", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string KichThuoc3
		{
			get
			{
				return this._KichThuoc3;
			}
			set
			{
				if ((this._KichThuoc3 != value))
				{
					this.OnKichThuoc3Changing(value);
					this.SendPropertyChanging();
					this._KichThuoc3 = value;
					this.SendPropertyChanged("KichThuoc3");
					this.OnKichThuoc3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQL", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaQL
		{
			get
			{
				return this._MaQL;
			}
			set
			{
				if ((this._MaQL != value))
				{
					if (this._MANAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQLChanging(value);
					this.SendPropertyChanging();
					this._MaQL = value;
					this.SendPropertyChanged("MaQL");
					this.OnMaQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(6)")]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBrand", DbType="VarChar(6)")]
		public string MaBrand
		{
			get
			{
				return this._MaBrand;
			}
			set
			{
				if ((this._MaBrand != value))
				{
					if (this._BRAND.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBrandChanging(value);
					this.SendPropertyChanging();
					this._MaBrand = value;
					this.SendPropertyChanged("MaBrand");
					this.OnMaBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_CART", Storage="_CARTs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CART> CARTs
		{
			get
			{
				return this._CARTs;
			}
			set
			{
				this._CARTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_PAYMENT_METHOD", Storage="_PAYMENT_METHODs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<PAYMENT_METHOD> PAYMENT_METHODs
		{
			get
			{
				return this._PAYMENT_METHODs;
			}
			set
			{
				this._PAYMENT_METHODs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BRAND_PRODUCT", Storage="_BRAND", ThisKey="MaBrand", OtherKey="MaBrand", IsForeignKey=true)]
		public BRAND BRAND
		{
			get
			{
				return this._BRAND.Entity;
			}
			set
			{
				BRAND previousValue = this._BRAND.Entity;
				if (((previousValue != value) 
							|| (this._BRAND.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BRAND.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._BRAND.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._MaBrand = value.MaBrand;
					}
					else
					{
						this._MaBrand = default(string);
					}
					this.SendPropertyChanged("BRAND");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_PRODUCT", Storage="_CATEGORY", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public CATEGORY CATEGORY
		{
			get
			{
				return this._CATEGORY.Entity;
			}
			set
			{
				CATEGORY previousValue = this._CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORY.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._CATEGORY.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("CATEGORY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANAGE_PRODUCT", Storage="_MANAGE", ThisKey="MaQL", OtherKey="MaQL", IsForeignKey=true)]
		public MANAGE MANAGE
		{
			get
			{
				return this._MANAGE.Entity;
			}
			set
			{
				MANAGE previousValue = this._MANAGE.Entity;
				if (((previousValue != value) 
							|| (this._MANAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANAGE.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._MANAGE.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._MaQL = value.MaQL;
					}
					else
					{
						this._MaQL = default(string);
					}
					this.SendPropertyChanged("MANAGE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
		
		private void attach_PAYMENT_METHODs(PAYMENT_METHOD entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_PAYMENT_METHODs(PAYMENT_METHOD entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SELLER")]
	public partial class SELLER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSeller;
		
		private string _TenSeller;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private string _MaLogin;
		
		private string _MaQL;
		
		private string _AvatarSeller;
		
		private EntityRef<LOGIN> _LOGIN;
		
		private EntityRef<MANAGE> _MANAGE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSellerChanging(string value);
    partial void OnMaSellerChanged();
    partial void OnTenSellerChanging(string value);
    partial void OnTenSellerChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnMaLoginChanging(string value);
    partial void OnMaLoginChanged();
    partial void OnMaQLChanging(string value);
    partial void OnMaQLChanged();
    partial void OnAvatarSellerChanging(string value);
    partial void OnAvatarSellerChanged();
    #endregion
		
		public SELLER()
		{
			this._LOGIN = default(EntityRef<LOGIN>);
			this._MANAGE = default(EntityRef<MANAGE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSeller", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSeller
		{
			get
			{
				return this._MaSeller;
			}
			set
			{
				if ((this._MaSeller != value))
				{
					this.OnMaSellerChanging(value);
					this.SendPropertyChanging();
					this._MaSeller = value;
					this.SendPropertyChanged("MaSeller");
					this.OnMaSellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSeller", DbType="NVarChar(MAX)")]
		public string TenSeller
		{
			get
			{
				return this._TenSeller;
			}
			set
			{
				if ((this._TenSeller != value))
				{
					this.OnTenSellerChanging(value);
					this.SendPropertyChanging();
					this._TenSeller = value;
					this.SendPropertyChanged("TenSeller");
					this.OnTenSellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLogin", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaLogin
		{
			get
			{
				return this._MaLogin;
			}
			set
			{
				if ((this._MaLogin != value))
				{
					if (this._LOGIN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoginChanging(value);
					this.SendPropertyChanging();
					this._MaLogin = value;
					this.SendPropertyChanged("MaLogin");
					this.OnMaLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQL", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaQL
		{
			get
			{
				return this._MaQL;
			}
			set
			{
				if ((this._MaQL != value))
				{
					if (this._MANAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQLChanging(value);
					this.SendPropertyChanging();
					this._MaQL = value;
					this.SendPropertyChanged("MaQL");
					this.OnMaQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvatarSeller", DbType="VarChar(50)")]
		public string AvatarSeller
		{
			get
			{
				return this._AvatarSeller;
			}
			set
			{
				if ((this._AvatarSeller != value))
				{
					this.OnAvatarSellerChanging(value);
					this.SendPropertyChanging();
					this._AvatarSeller = value;
					this.SendPropertyChanged("AvatarSeller");
					this.OnAvatarSellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOGIN_SELLER", Storage="_LOGIN", ThisKey="MaLogin", OtherKey="MaLogin", IsForeignKey=true)]
		public LOGIN LOGIN
		{
			get
			{
				return this._LOGIN.Entity;
			}
			set
			{
				LOGIN previousValue = this._LOGIN.Entity;
				if (((previousValue != value) 
							|| (this._LOGIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOGIN.Entity = null;
						previousValue.SELLERs.Remove(this);
					}
					this._LOGIN.Entity = value;
					if ((value != null))
					{
						value.SELLERs.Add(this);
						this._MaLogin = value.MaLogin;
					}
					else
					{
						this._MaLogin = default(string);
					}
					this.SendPropertyChanged("LOGIN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANAGE_SELLER", Storage="_MANAGE", ThisKey="MaQL", OtherKey="MaQL", IsForeignKey=true)]
		public MANAGE MANAGE
		{
			get
			{
				return this._MANAGE.Entity;
			}
			set
			{
				MANAGE previousValue = this._MANAGE.Entity;
				if (((previousValue != value) 
							|| (this._MANAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANAGE.Entity = null;
						previousValue.SELLERs.Remove(this);
					}
					this._MANAGE.Entity = value;
					if ((value != null))
					{
						value.SELLERs.Add(this);
						this._MaQL = value.MaQL;
					}
					else
					{
						this._MaQL = default(string);
					}
					this.SendPropertyChanged("MANAGE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
